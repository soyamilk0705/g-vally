<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC 
	"-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap>
 
 <cacheModel type="LRU" id="guestCashe">
 	<flushInterval hours="24"/>
 	<flushOnExecute statement="insertGuest"/>
 	<property name="size" value="10"/>
 </cacheModel>
 
 
 <!-- typeAlias : 해당 클래스에 별명 지정  -->
  <typeAlias alias="emp" type="emp.model.EmpDTO" />
 <typeAlias alias="board" type="emp.model.BoardDTO" />
 
<insert id="insertEmp" parameterClass="emp">
 	insert into BOOK_EMP (EMP_CODE, EMP_LOGIN_ID, EMP_LOGIN_PASSWD, EMP_NAME)
	values( (select NVL(max(EMP_CODE),0)+1 from BOOK_EMP), #id#,#pwd#,#name#)
 </insert> 

 
 <resultMap class="emp" id="empResult">
 
   	<result property="num" column="EMP_CODE" />  	
	<result property="name" column="EMP_NAME" />  	
	<result property="pwd" column="EMP_LOGIN_PASSWD" />  	
	<result property="id" column="EMP_LOGIN_ID" />  	
	
 </resultMap>	
 
 <select id="getEmpList" parameterClass="hashmap" resultMap="empResult">	
 	select * from
 	 (select *,ROWNUM r from BOOK_EMP) 
 	 	where r >= #start# and r &lt;= #end#	 	
 </select> 

 
<select id="getEmp" parameterClass="int" resultClass="emp">	
 	select * from BOOK_EMP where EMP_CODE = #num#
 </select>  
 
 
<select id="getEmpById" parameterClass="String" resultClass="emp">	
 	select EMP_CODE num, EMP_LOGIN_ID id, EMP_LOGIN_PASSWD pwd, EMP_NAME name from BOOK_EMP where EMP_LOGIN_ID = #id#
 </select>
 
<update id = "updateEmp" parameterClass="emp">	<!-- result 없음(void) -->
     update BOOK_EMP set EMP_LOGIN_ID=#id#, EMP_LOGIN_PASSWD=#pwd#, EMP_NAME=#name# 
     where EMP_CODE = #num# and EMP_LOGIN_PASSWD = #pwd#
 </update>

<delete id = "deleteEmp" parameterClass="emp">
     delete from BOOK_EMP where EMP_CODE = #num# and EMP_LOGIN_PASSWD = #pwd#
 </delete>

  
 <select id="getEmpCount" resultClass="int">
 	select count(*) from BOOK_EMP
 </select> 
 
 
  <select id="getEmpCountById" resultClass="int">
 	select count(*) from BOOK_EMP where EMP_LOGIN_ID = #id#
 </select> 

  <insert id="insertBoard" parameterClass="board">	<!--  id = dao에서 어떤 이름으로 찾을 건지 지정 -->
 	insert into board(num, name, email, pwd, subject, content, regdate, hit, parent, sort, tab)
	values( (select NVL(max(num),0)+1 from board), #name#,#email#,#pwd#,#subject#,#content#,SYSDATE,0,(select NVL(max(num),0)+1 from board),0,0)
 </insert> 
 
 
 <resultMap class="board" id="boardResult">
 
	<result property="num" column="num" />  	<!-- property: getter, setter 이름,  column: db column 이름 -->
	<result property="name" column="name" />  	
	<result property="email" column="email" />  	
	<result property="pwd" column="pwd" />  	
	<result property="subject" column="subject" />  	
	<result property="content" column="content" />  	
	<result property="regdate" column="regdate" />  	
	<result property="hit" column="hit" />  	
	<result property="parent" column="parent" />  	
	<result property="sort" column="sort" />  	
	<result property="tab" column="tab" />  	
	
 </resultMap>	<!-- resultMap, resultClass = 쿼리문을 실행하고 결과를 뭘 넘겨줄건지 작성 -->
 
 <!--  parameter는 hashMap으로 씀(hashmap을 받겠다), 키 값으로 가져오기 위해서  -->
 <select id="getBoardList" parameterClass="hashmap" resultMap="boardResult">	<!-- #_# : hashmap의 키값, return은 arrayList<boardResult>로 됨-->
 	select * from
 	 (select A.*,ROWNUM r from 
 	 	(select * from board order by parent desc, sort) A
 	 	)
 	 	where r >= #start# and r &lt;= #end#	 	<!-- 시작꺽쇠(<) 사용하면 오류 발생  -->
 </select> 

 
 <select id="getBoard" parameterClass="int" resultClass="board">	
 	select * from board where num = #num#
 </select> 
 
 
 <update id = "updateBoard" parameterClass="board">	<!-- result 없음(void) -->
     update board set name=#name#, email=#email#, subject=#subject#, content=#content#, regdate = sysdate 
     where num = #num# and pwd = #pwd#
 </update>
 
 <delete id = "deleteBoard" parameterClass="board">
     delete from board where num = #num# and pwd = #pwd#
 </delete>

  <update id = "updateHit" parameterClass="int">
     update board set
     	hit = hit + 1
     where num = #num#
 </update>
 
 <select id="getBoardCount" resultClass="int">
 	select count(*) from board
 </select>
 
 <update id="updateSort" parameterClass="board">
 	update board set
 		sort = sort + 1
 	where parent = #parent# and sort >= #sort#  	
 </update>
 
  <insert id="insertReply" parameterClass="board">
 	insert into board(num, name, email, pwd, subject, content, regdate, hit, parent, sort, tab)
	values( (select NVL(max(num),0)+1 from board), #name#,#email#,#pwd#,#subject#,#content#,SYSDATE,0,#parent#,#sort#,#tab#)
 </insert> 
 
</sqlMap>